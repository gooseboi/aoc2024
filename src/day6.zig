const std = @import("std");
const ArrayList = std.ArrayList;

pub const example: []const u8 =
    \\....#.....
    \\.........#
    \\..........
    \\..#.......
    \\.......#..
    \\..........
    \\.#..^.....
    \\........#.
    \\#.........
    \\......#...
;

pub const puzzle: []const u8 =
    \\......#.......#...................................................................................##......#..............#........
    \\........................#....................................#....................................................................
    \\...#.........#...#.....##..#...#......#..........................................#................#...................#....#....#.
    \\....................#...#...#.#............#..................................#..............#....#...............................
    \\.....................................................................#................................#...........................
    \\........#............#......#................#..................#................................................#...............#
    \\...................#.........#............................................................##......................................
    \\.........#..........#......##.............#.#...............#................................##.................#.................
    \\...........................................................#...............................#..................##......##.....#....
    \\...................#...........................................##...............#.....#......#............#..........#............
    \\...............#........................#...#....#..............................................#.#......#............#...........
    \\........#.............#...........................#..#.....................................#......................................
    \\......#......#....#..............#...............#...#...............#.......#...................................................#
    \\..........#............#..#.....#......................#.........#...........................#..........#.........................
    \\#...............................................................................#.#....#.............###..................#.......
    \\.....#.#....#....................................#............................#...............#........................#....#.....
    \\....#......#................#....................#...................#............#................#..............................
    \\#...................#.............................#.#...#.............#......................#.....................#..............
    \\.................#...............#................................#..##..#..............#.......#.................................
    \\.....................................................##.#.....................................#.............#.....................
    \\...#.............................#................................................................................................
    \\#.##.........................................#....#..#..............................#......#..................................#...
    \\......................#.........##.....................................#......................#..#..........#...............#....#
    \\.#......................................................#....#......................................#...............#....#........
    \\............#...............................#.......................................................#.............................
    \\.............................................................................#....................................................
    \\..#...#.....#...............................................................................................#.....................
    \\................................................#.#.......................#..................#............#.......................
    \\...............#.............#.....................#........................................................#..........#.......#..
    \\...................................#..........#......#............................................#.....#.........................
    \\.............#..............#...........##..........................................................................#.....#.......
    \\.............#...............#........#.................................................................#.......#.................
    \\.#...............................................................#..............................................................#.
    \\.#......#...........#..............................................................##.............................................
    \\...................#.....................................#....#........................#............................#.......###...
    \\.....#...#.....#......................#.....................................#...............................#.....................
    \\......................#....#...#........#........#...........................#...............#...........................#....#...
    \\..#..#................................................................................#...........................................
    \\.....#......#.#.......................................#..........#................................................................
    \\..........#.......................#.............#.#........##.........................................................#...........
    \\##........##.#....................#...#...................................................#.##......#...................#.........
    \\...........#................#.#...........#......................#..................#......#......................................
    \\...#..............................#......#...............#.................#.#............................................#.....#.
    \\...#..................#...............#.........#..#.............................#..........#...................#.......#.........
    \\.....................................................................................................#.......................#....
    \\....................................##.#.................................#......##................................#.#.............
    \\..................#.............................................................................................#............#....
    \\............#........#...#.....#.....#........................................#....#..............#..............................#
    \\....................................#...........................................................................................#.
    \\............................#.#....#.....................#........................................................................
    \\........#....#......#.......#................................................................##............................#......
    \\....#...................#....#.............................................................................................#......
    \\....................#......#.........................#..................#.........#....................#..........................
    \\#........#.....#.......#....................................#.....#...........................................#...................
    \\.....#....................................................................................................#.#....#................
    \\....#....................................................................#.......#........................................#.......
    \\#...........................#.#....#......#................................................................................#......
    \\.#..........................................................#...............#......................#.............................#
    \\..#..#.#...................................#.......#...............#....#....................#................................#...
    \\.........................#........................................................................................................
    \\...................................#...........................#...........#..#...........#................#.........#............
    \\......................................#...............#.................#..#............................#.....#..#...#............
    \\#.......................#.........#..#...............................................................#.......................#....
    \\............#............................#..#.....................................................................................
    \\................#............#..................#....#........#...............................#....#.#.......................#.#..
    \\.........................................................................#....................#..........................#........
    \\.....................................................#...............#........................................#......#............
    \\..........##..................##...............................................................................................#..
    \\..................#.........................................#..#......................#.........#.....#.....#.....................
    \\..#.........................................................................#...................................#................#
    \\...............................#..................................................................................................
    \\..#..........#..#..............................................................................#........................#.........
    \\...........#.#........................................................#.....#.........................#...........................
    \\...........................................#......#...............................................................................
    \\.......................#................................................................................................##........
    \\.....#...............#....................................................................................#.......#...............
    \\.#.#.................................#........................#................#...............#......#...........................
    \\........#........#...............#.........................^...........................#......#.................................#.
    \\.....................#.............#..#...........................................................................................
    \\...........#...........................................................................#.......##......#.............#............
    \\..........#..........................................#.................#....#......##.........#.................................#.
    \\...................#...#...................#....#...........#................................#.#..................................
    \\.......#....#...#..................#...............................................#.....#.........#......#.#.#.......#......#....
    \\.....#................................................#......................#...#.....................................#.#........
    \\.##........##.......#.........................................##..................................................................
    \\......................................#....#........#..........#..#...........................#....................#....#.........
    \\.......................#........................#..............................#.#.............................................#..
    \\..........................#....###......................................................................#...................#.....
    \\...........#..................#..............#....................................................................................
    \\......................#................#..#............................#............#.........................##...#..............
    \\.................#.......................................................................#....#...............................#...
    \\................................................#..............................................................................#..
    \\..#.......#....#................#...........................#..........#.#..#.......................#.#....................#......
    \\........#.............................#........................................#..................................................
    \\...........................#............................................................................#.............#....#......
    \\#...................#.......#............#..........................................................#..#....#......#..........#..#
    \\#..........#.................................#.........................#..................................#....................##.
    \\..........#..#...........................................................................#........................##..........#...
    \\.............#.#.......................................#.................................#..............#.......#.................
    \\.................#....#........#........#....#.................................#................................#.................
    \\...........................#..........#.#..#..#........#...#....................#...#........#.......................#............
    \\........#................................#...................................#.#...............#..................................
    \\............................................................#.......#......#.#..........................#..#....................#.
    \\.........#.#....................................#.....................#.....##.......#..................................#.........
    \\........#......................................#.......##............................................................##.....#.....
    \\.............#................................#....#..................##...........................#..#..#........................
    \\.......................................................#...#..........#...................................#.......#........#......
    \\.....#...........#...............................................................................................#................
    \\.......#..................#......#.....#............#..................#.......#.............#................#...................
    \\.....#.........................................................#...........................................#.............#.....#..
    \\...............#..................#...............................................#...................#...........................
    \\..#............#......#....#...#..............................#..#...................................#...#.............#..........
    \\.........#........#.....................................##.......................#.....................#..#.............#.........
    \\....................#....#......................#..#.##..................#................#...........#............#..............
    \\..........#..................................#............#..#...............#.................#..........#.......................
    \\..................#.........#........................#.........................#.........#..................................#.....
    \\...........#.#..............#........#.................................#............#............................#................
    \\.#.....#........................................................................................#....#........##..................
    \\.....................#....#.................#..........#............#............................#.............#.............#.#..
    \\................................#....#......................................................#....#............#.............#.....
    \\..............#..#.........#....................#.......................#.......#.........#..................#....................
    \\.............#.....#....................#.#.....................#................#...#.........................#........##........
    \\.......#.......................#.........................................#.........................##.....#...........#...#.....#.
    \\.....#.................#................................................................#.................................#....#..
    \\................#.......................#...........#........#................#.......#.#.#........................#........#.....
    \\......#..........................#......#............#.......#...#.............................#..........##.......#..........#...
    \\................#.....#...#..............................#......#..#..............................................................
    \\.............................#....#...............#..............#......................................#.......###..#.#..........
    \\..........#.......#...............#............................#........#.........................................................
    \\.................#.....................................#.......................................#................#........#.#..#...
;

pub fn run(alloc: std.mem.Allocator) [4]u64 {
    const val1 = part1(example, alloc) catch unreachable;
    const val2 = part1(puzzle, alloc) catch unreachable;
    const val3 = part2(example, alloc) catch unreachable;
    const val4 = part2(puzzle, alloc) catch unreachable;
    return .{ val1, val2, val3, val4 };
}

const Board = struct {
    row_len: usize,
    data: ArrayList(u8),
    cursor_pos: usize,

    const Self = @This();

    pub fn advance(self: *Self) bool {
        const new_pos = switch (self.data.items[self.cursor_pos]) {
            '^' => if (self.cursor_pos >= self.row_len) self.cursor_pos + 0 - 1 * self.row_len else return false,
            '>' => self.cursor_pos + 1 + 0 * self.row_len,
            'v' => self.cursor_pos + 0 + 1 * self.row_len,
            '<' => if (self.cursor_pos > 0) self.cursor_pos - 1 + 0 * self.row_len else return false,
            else => unreachable,
        };

        const row_idx = self.cursor_pos % self.row_len;
        const new_row_idx = new_pos % self.row_len;
        if ((new_pos >= self.data.items.len) or (new_row_idx != row_idx and new_row_idx != row_idx + 1 and new_row_idx + 1 != row_idx)) {
            self.data.items[self.cursor_pos] = 'X';
            return false;
        }

        if (self.data.items[new_pos] == '#') {
            const cursor = &self.data.items[self.cursor_pos];
            cursor.* = switch (cursor.*) {
                '^' => '>',
                '>' => 'v',
                'v' => '<',
                '<' => '^',
                else => unreachable,
            };
        } else {
            const old_cursor = self.data.items[self.cursor_pos];
            self.data.items[self.cursor_pos] = 'X';
            self.cursor_pos = new_pos;
            self.data.items[self.cursor_pos] = old_cursor;
        }

        return true;
    }

    pub fn print(self: *const Self) void {
        const count = self.data.items.len / self.row_len;
        for (0..count) |i| {
            std.debug.print("{s}\n", .{self.data.items[self.row_len * i ..][0..self.row_len]});
        }
        std.debug.print("\n", .{});
    }

    pub fn visited(self: *const Self) u64 {
        return std.mem.count(u8, self.data.items, &[_]u8{'X'});
    }

    pub fn clone(self: *const Self) !Self {
        return .{
            .row_len = self.row_len,
            .data = try self.data.clone(),
            .cursor_pos = self.cursor_pos,
        };
    }

    pub fn checkLoop(self: *Self, alloc: std.mem.Allocator) !bool {
        var visited_cells = std.AutoHashMap(usize, [4]u8).init(alloc);
        defer visited_cells.deinit();
        try visited_cells.put(self.cursor_pos, [4]u8{ self.data.items[self.cursor_pos], 0, 0, 0 });
        while (self.advance()) {
            if (visited_cells.getPtr(self.cursor_pos)) |vals| {
                if (std.mem.indexOfScalar(u8, vals, self.data.items[self.cursor_pos])) |_| {
                    return true;
                }
                const idx = std.mem.indexOfScalar(u8, vals, 0) orelse unreachable;
                vals[idx] = self.data.items[self.cursor_pos];
            } else {
                const arr = [4]u8{ self.data.items[self.cursor_pos], 0, 0, 0 };
                try visited_cells.put(self.cursor_pos, arr);
            }
        }

        return false;
    }
};

fn parse(s: []const u8, alloc: std.mem.Allocator) !Board {
    var lines = std.mem.splitScalar(u8, s, '\n');
    var input = ArrayList(u8).init(alloc);
    var row_len: usize = 0;
    var old_row_len: usize = 0;
    while (lines.next()) |line| {
        row_len = line.len;
        if (old_row_len == 0) old_row_len = row_len;
        if (row_len != old_row_len) unreachable;
        try input.appendSlice(line);
    }

    const idx = std.mem.indexOfScalar(u8, input.items, '^') orelse unreachable;

    return .{ .row_len = row_len, .data = input, .cursor_pos = idx };
}

pub fn part1(s: []const u8, alloc: std.mem.Allocator) !u64 {
    var board = try parse(s, alloc);
    defer board.data.deinit();

    while (board.advance()) {
        // board.print();
    }

    return board.visited();
}

pub fn part2(s: []const u8, alloc: std.mem.Allocator) !u64 {
    const board = try parse(s, alloc);
    defer board.data.deinit();

    var temp_board = try board.clone();
    defer temp_board.data.deinit();

    while (temp_board.advance()) {}

    var collisions = ArrayList(usize).init(alloc);
    defer collisions.deinit();
    for (temp_board.data.items, 0..) |cell, i| {
        if (cell == 'X') {
            try collisions.append(i);
        }
    }

    var sum: u64 = 0;
    for (0..board.data.items.len) |i| {
        if (std.mem.indexOfScalar(usize, collisions.items, i) == null) continue;
        if (board.data.items[i] != '.') continue;

        var new_board = try board.clone();
        defer new_board.data.deinit();

        new_board.data.items[i] = '#';
        if (try new_board.checkLoop(alloc)) sum += 1;
    }

    return sum;
}
